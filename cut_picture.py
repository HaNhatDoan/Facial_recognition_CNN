import cv2
import os

# Th∆∞ m·ª•c ch·ª©a ·∫£nh g·ªëc
INPUT_DIR = "./datasets/Doan"
# Th∆∞ m·ª•c ch·ª©a ·∫£nh khu√¥n m·∫∑t sau khi c·∫Øt
OUTPUT_DIR = "./cropped_datasets/Doan"

# T·∫°o th∆∞ m·ª•c output n·∫øu ch∆∞a t·ªìn t·∫°i
os.makedirs(OUTPUT_DIR, exist_ok=True)

# Load Haar cascade detector cho khu√¥n m·∫∑t
face_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + "haarcascade_frontalface_default.xml")

# Duy·ªát qua c√°c file ·∫£nh trong th∆∞ m·ª•c input
for filename in os.listdir(INPUT_DIR):
    if filename.lower().endswith(('.jpg', '.jpeg', '.png')):
        path = os.path.join(INPUT_DIR, filename)
        img = cv2.imread(path)
        gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)

        # Ph√°t hi·ªán khu√¥n m·∫∑t
        faces = face_cascade.detectMultiScale(gray, scaleFactor=1.1, minNeighbors=5)

        if len(faces) == 0:
            print(f"‚ö†Ô∏è Kh√¥ng ph√°t hi·ªán khu√¥n m·∫∑t trong {filename}")
            continue

        # C·∫Øt t·ª´ng khu√¥n m·∫∑t v√† l∆∞u
        for i, (x, y, w, h) in enumerate(faces):
            face_img = img[y:y+h, x:x+w]
            output_filename = f"{os.path.splitext(filename)[0]}_face{i+1}.jpg"
            output_path = os.path.join(OUTPUT_DIR, output_filename)
            cv2.imwrite(output_path, face_img)
            print(f"‚úÖ ƒê√£ l∆∞u khu√¥n m·∫∑t: {output_filename}")

print("üéâ Xong!")
